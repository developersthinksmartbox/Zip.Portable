# build variables
os: Visual Studio 2015
configuration: Release
platform: Any CPU
environment:
  LibraryVersion: 0.9.2
  WinZipUsername:
    secure: o91cPHdGUi1HAJJUHvYtEA==
  WinZipKey:
    secure: YALxthCvgXTeOx/bKfjSPRDxm0jGetiRElTG+pRomoFY65xxdEDZ7KUxQAfZd+7Y
  matrix:
    - SignAssembly: true
      Signing: Signed
    - SignAssembly: false
      Signing: Unsigned
  
# versioning
version: $(LibraryVersion).{build}
assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: $(LibraryVersion).0
  assembly_file_version: '{version}'
  assembly_informational_version: '{version}-{branch}'

# pre-requisites
install:
  - cinst 7zip -x86
  - cinst 7zip.commandline -x86
  - ps: |
      $ErrorActionPreference = "Stop"

      Write-Host "Downloading WinZip..."
      $winzipUrl = 'http://download.winzip.com/winzip195-32.msi'
      $winzipCommand = 'http://download.winzip.com/wzcline40-32.exe'
      Invoke-WebRequest $winzipUrl -OutFile winzip.msi
      Invoke-WebRequest $winzipCommand -OutFile wzcline.zip
      
      $wzDir = "${env:ProgramFiles(x86)}\WinZip\"
      Write-Host "Installing WinZip into $wzDir..."
      $wzInstall = "/i winzip.msi /qn /l WinZipInstall.log INSTALLDIR=`"$wzDir`" ADDDESKTOPICON=0 ADDSTARTMENU=0 INSTALLCMD=`"/noc4u /notip /autoinstall`""
      Start-Process msiexec -ArgumentList $wzInstall -Wait
      echo (Get-Content WinZipInstall.log)
      7za x -y wzcline.zip -o"$wzDir"

      Write-Host "Registering WinZip..."
      $wzinireg = "HKCU:\SOFTWARE\Nico Mak Computing\WinZip\WinIni"
      New-ItemProperty -Path "$wzinireg" -Name "UZQF" -Value "K112"
      New-ItemProperty -Path "$wzinireg" -Name "Name1" -Value "$env:WinZipUsername"
      New-ItemProperty -Path "$wzinireg" -Name "SN1" -Value "$env:WinZipKey"
      Write-Host "Registering WinZip addons..."
      $nl = [Environment]::NewLine
      "[Addon]$nlUZQF=K112$nlAOFF=0" | Out-File "$env:ProgramData\WinZip\WinZip.addon"

      Write-Host "Downloading info-zip..."
      $infoZipUrl = 'ftp://ftp.info-zip.org/pub/infozip/win32/zip300xn.zip'
      $infoUnzipUrl = 'ftp://ftp.info-zip.org/pub/infozip/win32/unz600xn.exe'
      Invoke-WebRequest $infoZipUrl -OutFile infozip.zip
      Invoke-WebRequest $infoUnzipUrl -OutFile infounzip.zip
      
      $izDir = "${env:ProgramFiles(x86)}\infozip.org\"
      Write-Host "Installing info-zip into $izDir..."
      7za x -y infozip.zip -o"$izDir"
      7za x -y infounzip.zip -o"$izDir"

# build
matrix:
  fast_finish: true
branches:
  only:
    - master
before_build:
  - nuget restore src\Zip.Portable.sln
build: 
  project: src\Zip.Portable.sln 
  verbosity: normal

# tests
test:
  assemblies:
    - '**\*.Tests.dll'
  categories:
    except:
      - NotForCI

# artifacts
artifacts: 
  - path: src\BZip2.Portable\bin\$(configuration)\$(Signing)\
    name: BZip2.Portable-$(configuration)-$(Signing)-$(APPVEYOR_BUILD_VERSION) 
    type: zip 
  - path: src\Zip.Portable\bin\$(configuration)\$(Signing)\
    name: Zip.Portable-$(configuration)-$(Signing)-$(APPVEYOR_BUILD_VERSION) 
    type: zip 
  - path: src\Zip.Portable.PlatformSupport\bin\$(configuration)\$(Signing)\
    name: Zip.Portable.PlatformSupport-$(configuration)-$(Signing)-$(APPVEYOR_BUILD_VERSION) 
    type: zip 
  - path: src\Zip.Portable.Platform.PCLStorage\bin\$(configuration)\$(Signing)\
    name: Zip.Portable.Platform.PCLStorage-$(configuration)-$(Signing)-$(APPVEYOR_BUILD_VERSION) 
    type: zip 
